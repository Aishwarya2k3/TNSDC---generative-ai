# -*- coding: utf-8 -*-
"""Fantasy word builder

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13KEluTZiIGSGNXbBNM0UKACx6F0aYJ26
"""

import random

class Continent:
    def __init__(self, name):
        self.name = name
        self.countries = []

    def add_country(self, country):
        self.countries.append(country)


class Country:
    def __init__(self, name):
        self.name = name
        self.capital = None
        self.cities = []

    def set_capital(self, city):
        self.capital = city

    def add_city(self, city):
        self.cities.append(city)


class City:
    def __init__(self, name, population, landmarks):
        self.name = name
        self.population = population
        self.landmarks = landmarks


def generate_fantasy_world():
    continents = ["Auroria", "Eldoria", "Zephyria", "Nimoria"]
    countries = ["Avalon", "Elysium", "Arcadia", "Mythos", "Olympus", "Valhalla", "Atlantis"]
    cities = {
        "Avalon": [("Camelot", 50000, ["Excalibur Castle", "Merlin's Tower"]),
                   ("Feyhaven", 30000, ["Grove of the Fae", "Crystal Falls"]),
                   ("Dragon's Roost", 25000, ["Dragon Keep", "Scales Market"])],
        "Elysium": [("Celestia", 45000, ["Angel's Cathedral", "Aether Gardens"]),
                    ("Eternal City", 40000, ["Timeless Tower", "Gates of Elysium"]),
                    ("Golden Shores", 30000, ["Sunset Beach", "Treasure Cove"])],
        "Arcadia": [("Elmsreach", 35000, ["Whispering Woods", "Silverlake"]),
                    ("Starfall", 30000, ["Stellar Observatory", "Moonlit Meadow"]),
                    ("Havenbrook", 20000, ["Tranquil River", "Willow's Rest"])],
        "Mythos": [("Olympium", 50000, ["Mount Olympus", "Hera's Temple"]),
                   ("Hydrascale", 25000, ["Labyrinth of Minos", "Triton's Fountain"]),
                   ("Oracle's Peak", 30000, ["Pythia's Sanctum", "Echoing Caves"])],
        "Olympus": [("Valoria", 40000, ["Valkyrie's Hold", "Odin's Hall"]),
                    ("Thunderkeep", 35000, ["Stormforge Citadel", "Frostbite Pass"]),
                    ("Sunset Peaks", 30000, ["Sunset Valley", "Eagle's Nest"])],
        "Valhalla": [("Asgard", 50000, ["Bifrost Bridge", "Valhalla Hall"]),
                     ("Midgard", 45000, ["Yggdrasil Tree", "Midgard Marketplace"]),
                     ("Ragnarok Falls", 30000, ["Doom's Canyon", "Valkyrie's Rest"])],
        "Atlantis": [("Aquatica", 45000, ["Pearl Palace", "Coral Gardens"]),
                     ("Marinara", 40000, ["Seaweed Market", "Siren's Cove"]),
                     ("Triton's Reach", 35000, ["Trident Square", "Poseidon's Temple"])]
    }

    world = []

    for continent_name in continents:
        continent = Continent(continent_name)

        for country_name in countries:
            country = Country(country_name)
            cities_info = cities[country_name]

            for city_info in cities_info:
                city_name, city_population, city_landmarks = city_info
                city = City(city_name, city_population, city_landmarks)

                if city_name == "Camelot" or city_name == "Celestia" or city_name == "Elmsreach" or \
                        city_name == "Olympium" or city_name == "Valoria" or city_name == "Asgard" or \
                        city_name == "Aquatica":
                    country.set_capital(city)

                country.add_city(city)

            continent.add_country(country)

        world.append(continent)

    return world


def print_fantasy_world(world):
    for continent in world:
        print(f"Continent: {continent.name}")
        for country in continent.countries:
            print(f"\tCountry: {country.name}")
            print(f"\tCapital: {country.capital.name}")
            print("\tCities:")
            for city in country.cities:
                print(f"\t\tName: {city.name}")
                print(f"\t\tPopulation: {city.population}")
                print(f"\t\tLandmarks: {', '.join(city.landmarks)}")
                print()

# Generate the fantasy world
fantasy_world = generate_fantasy_world()

# Print the fantasy world
print_fantasy_world(fantasy_world)